- en: 'Ruby Regex: Match any character in Regular Expression'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ruby 正则表达式：匹配正则表达式中的任何字符
- en: 原文：[https://techbyexample.com/ruby-regex-match-any-character/](https://techbyexample.com/ruby-regex-match-any-character/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/ruby-regex-match-any-character/](https://techbyexample.com/ruby-regex-match-any-character/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**概述**'
- en: Dot ‘.’ character is one of the most commonly used metacharacters in the regular
    expression. It is used to match any character. By default, it doesn’t match a
    new line.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 点号‘.’是正则表达式中最常用的元字符之一。它用于匹配任何字符。默认情况下，它不匹配换行符。
- en: Now let’s see a simple program for Dot ‘.’ character
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看一个简单的程序，展示点号‘.’字符。
- en: '**Program**'
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Output**'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE1]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the above program, we have a simple regex containing only one dot character.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的程序中，我们有一个简单的正则表达式，只包含一个点号字符。
- en: '[PRE2]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It matches below characters and string.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 它匹配以下字符和字符串。
- en: '[PRE3]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: It matches **ab** because by default the regex doesn’t do the match the full
    string unless we use the anchor characters (Caret and Dollar character). That
    is why it matches the first character ‘a’ in ‘ab’ and reports a match.It doesn’t
    match an empty string.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 它匹配**ab**，因为默认情况下，正则表达式不会匹配整个字符串，除非使用锚字符（插入符号和美元符号）。这就是为什么它匹配字符串‘ab’中的第一个字符‘a’并报告匹配。它不会匹配空字符串。
- en: Let’s see another example where we have two dots in the regex.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子，其中正则表达式中有两个点号。
- en: '[PRE4]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Output**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE5]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the above program, we have a simple regex containing two dots.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的程序中，我们有一个简单的正则表达式，包含两个点号。
- en: '[PRE6]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It will match any given string which has at least two characters as a substring.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 它将匹配任何包含至少两个字符的子字符串。
- en: That is why it gives a match for
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么它匹配
- en: '[PRE7]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: and doesn’t give a match for (It gives an empty string match)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 并且不会给出匹配（它会匹配一个空字符串）。
- en: '[PRE8]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
