- en: Ruby Regex or Regular Expression in a variable
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ruby 正则表达式或变量中的正则表达式
- en: 原文：[https://techbyexample.com/ruby-regex-variable/](https://techbyexample.com/ruby-regex-variable/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/ruby-regex-variable/](https://techbyexample.com/ruby-regex-variable/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**概述**'
- en: In Ruby, a regular expression is defined between two forward slashes. This is
    a way to differentiate a regular expression from a normal string. This is how
    a regex will be represented
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Ruby 中，正则表达式是通过两个斜杠定义的。这是一种区分正则表达式与普通字符串的方式。正则表达式将以这种方式表示
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As such it is also possible to assign a Regular Expression to a variable. Below
    is the example program for the same.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，也可以将正则表达式赋值给一个变量。下面是相应的示例程序。
- en: '**Program**'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notice how we are assigning the regular expression to a variable like this
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们是如何将正则表达式赋值给一个变量的，像这样
- en: '[PRE3]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: And then using it in the match like this
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 然后像这样在匹配中使用它
- en: '[PRE4]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Other than regex you can have other variables or any kind of string
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 除了正则表达式，你还可以使用其他变量或任何类型的字符串
- en: For example
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如
- en: '[PRE5]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Notice the regex here we prefixed it with the character **“a”**
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这里的正则表达式，我们在前面加上了字符**“a”**
- en: '[PRE6]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now run the above program. It will give a match
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行上面的程序。它会给出一个匹配结果
- en: '[PRE7]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[regex](https://techbyexample.com/tag/regex/)*   [ruby](https://techbyexample.com/tag/ruby/)'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[正则表达式](https://techbyexample.com/tag/regex/)*   [Ruby](https://techbyexample.com/tag/ruby/)'
