- en: Largest Rectangular Area in a Histogram
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 直方图中的最大矩形面积
- en: 原文：[https://techbyexample.com/histogram-largest-rectangular-area/](https://techbyexample.com/histogram-largest-rectangular-area/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/histogram-largest-rectangular-area/](https://techbyexample.com/histogram-largest-rectangular-area/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**概述**'
- en: There is a set of bars each of 1 unit width but different heights placed alongside.
    The height of the bars is represented using an array
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 有一组每根宽度为 1 单位但高度不同的柱子并排放置。柱子的高度通过数组表示
- en: '[PRE0]'
  id: totrans-4
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The array represents that
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 数组表示的是
- en: The total number of bars is 5
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 柱子的总数是 5
- en: The first bar is of height 2
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一根柱子的高度是 2
- en: The second bar is of height 0
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二根柱子的高度是 0
- en: The third bar is of height 2
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三根柱子的高度是 2
- en: The fourth bar is of height 1
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第四根柱子的高度是 1
- en: The fifth bar is of height 3
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第五根柱子的高度是 3
- en: The sixth bar is of height 1
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第六根柱子的高度是 1
- en: The objective is to find the maximum rectangular area in the histogram. As seen
    from the diagram the maximum rectangular area is 4.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是找到直方图中的最大矩形面积。从图示可以看到，最大矩形面积是 4。
- en: '![](../Images/6ffbabd1edabc30829b12508d8543a60.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ffbabd1edabc30829b12508d8543a60.png)'
- en: Below is the approach we can take to solve this question. We will use the stack
    and will find out the area at every index of the bar assuming that the bar is
    fully included in the largest rectangle.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们可以采取的方法来解决此问题。我们将使用栈并在每个柱子的索引处找到矩形面积，假设该柱子完全包含在最大矩形中。
- en: Push the first element of the given array to the stack. Traverse through the
    given array. For every bar, we need to find out the nearest smaller bar on the
    left side and the nearest smaller bar on the right side
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将给定数组的第一个元素推入栈中。遍历给定的数组。对于每根柱子，我们需要找到左侧最近的较小柱子和右侧最近的较小柱子
- en: For the current element, check if the height of the top element is greater than
    the height of the current element
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于当前元素，检查栈顶元素的高度是否大于当前元素的高度
- en: If yes then the current element is the nearest smaller bar on the right side.
    And the element in the stack after the top element is the nearest smaller bar
    on the left side.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是，那么当前元素就是右侧最近的较小柱子。栈顶元素之后的元素是左侧最近的较小柱子。
- en: Pop this element and calculate the largest rectangular area assuming that the
    bar is included fully. Keep track of the maximum rectangular area
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 弹出该元素并计算最大矩形面积，假设该柱子完全包含在矩形内。跟踪最大矩形面积
- en: Repeat the above two steps till the stack is empty or the height of the top
    element is less than the current element
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重复上述两个步骤，直到栈为空或栈顶元素的高度小于当前元素
- en: Push the current element to the stack
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将当前元素推入栈中
- en: Return the maximum rectangular area at the end.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后返回最大矩形面积。
- en: '**Program**'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Below is the program for the same.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是相应的程序。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
