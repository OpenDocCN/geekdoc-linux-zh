- en: Two furthest houses with different colors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/two-furthest-houses-different-colors/](https://techbyexample.com/two-furthest-houses-different-colors/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: An array is given which represents the color of houses. So array[i] represents
    the color of the house at index i. The objective is to find two furthest houses
    with different colors.
  prefs: []
  type: TYPE_NORMAL
- en: If no such indexes exist then return -1
  prefs: []
  type: TYPE_NORMAL
- en: Example 1
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Example 2
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Below is the approach we can take.
  prefs: []
  type: TYPE_NORMAL
- en: One of the houses will be either at the 0th index or n-1 index where n is the
    length of the array
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can first assume that the house at the 0th index is in the solution and then
    compute
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We can next assume that house at n-1 index is in the solution and then compute
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is the program for the same.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
