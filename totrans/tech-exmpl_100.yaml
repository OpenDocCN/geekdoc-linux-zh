- en: Check if two given strings are anagrams
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查给定的两个字符串是否是字谜
- en: 原文：[https://techbyexample.com/anagrams-two-string/](https://techbyexample.com/anagrams-two-string/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/anagrams-two-string/](https://techbyexample.com/anagrams-two-string/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**概述**'
- en: An **anagram** is a word or phrase formed by rearranging the letters of a different
    word or phrase, typically using all the original letters exactly once. For example,
    the word *anagram* itself can be rearranged into *nagaram*, also the word *binary* into *brainy*^, and
    the word *adobe* into the *abode*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**字谜** 是通过重新排列一个单词或短语中的字母，通常使用原始字母且每个字母只使用一次，形成的一个新单词或短语。例如，单词 *anagram* 本身可以重新排列成
    *nagaram*，同样，单词 *binary* 可以变成 *brainy*^，而单词 *adobe* 可以变成 *abode*。'
- en: For example
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 例如
- en: '[PRE0]'
  id: totrans-5
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here is the idea of how to do it. Create a map of string to int. Now
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这是实现这个的思路。创建一个字符串到整数的映射。现在
- en: Traverse the first string and increase the count of each character in the map
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遍历第一个字符串，并增加映射中每个字符的计数
- en: Traverse the second string and decrease the count of each character in the map
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遍历第二个字符串，并减少映射中每个字符的计数
- en: Traverse the first string again and if for any character the count is non-zero
    in the map then return false.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 再次遍历第一个字符串，如果映射中某个字符的计数不为零，则返回 false。
- en: In the end return true
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后返回 true
- en: '**Program**'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Here is the program for the same.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是相应的程序代码。
- en: '[PRE1]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
