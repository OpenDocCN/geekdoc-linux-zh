- en: 'Ruby Regex: Match any character in Regular Expression'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/ruby-regex-match-any-character/](https://techbyexample.com/ruby-regex-match-any-character/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Dot ‘.’ character is one of the most commonly used metacharacters in the regular
    expression. It is used to match any character. By default, it doesn’t match a
    new line.
  prefs: []
  type: TYPE_NORMAL
- en: Now let’s see a simple program for Dot ‘.’ character
  prefs: []
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: In the above program, we have a simple regex containing only one dot character.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: It matches below characters and string.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: It matches **ab** because by default the regex doesn’t do the match the full
    string unless we use the anchor characters (Caret and Dollar character). That
    is why it matches the first character ‘a’ in ‘ab’ and reports a match.It doesn’t
    match an empty string.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see another example where we have two dots in the regex.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: In the above program, we have a simple regex containing two dots.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: It will match any given string which has at least two characters as a substring.
  prefs: []
  type: TYPE_NORMAL
- en: That is why it gives a match for
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: and doesn’t give a match for (It gives an empty string match)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
