- en: What does chmod o-w command mean in bash or terminal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/chmod-ow/](https://techbyexample.com/chmod-ow/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are three components that are in the picture when it comes to managing
    the permissions of a file.
  prefs: []
  type: TYPE_NORMAL
- en: '**Permission Groups**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**User** – Abbreviated by **‘u’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Group** – Abbreviated by **‘g’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Other**– Abbreviated by **‘o’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**All** – Abbreaviated by **‘a’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Permission Types**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Read Permission –** Abbreviated by **‘r’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Write Permission –** Abbreviated by **‘w’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execute Permission –** Abbreviated by **‘x’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '****Operations Definitions****'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '***   **+** is used to add a permission'
  prefs: []
  type: TYPE_NORMAL
- en: '**–** is used to remove a permission'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**=** is used to set a permission'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So **o-w** means taking away **write** permission from the **other** user
  prefs: []
  type: TYPE_NORMAL
- en: Before we see an example let’s see how file permissions are represented when
    you run **ls** command
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a9383f505140bf673a7856b9c91b948d.png)'
  prefs: []
  type: TYPE_IMG
- en: Below are some points about the above diagram
  prefs: []
  type: TYPE_NORMAL
- en: The first character represents the file type. ‘-‘ means regular file and ‘d’
    means directory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The second to fourth character represents the Read, Write and Execute Permission
    for the owner.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The fourth to seventh character represents the Read, Write and Execute Permissions
    for the group
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The eighth to the tenth character represents the Read, Write and Execute Permissions
    for the other user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Example**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a file **temp.txt**. Check its permissions.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the **other** user only has permission to only **read**
  prefs: []
  type: TYPE_NORMAL
- en: Now run command to give write permission to the other user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chmod o+w temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: ls -all | grep temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: -rw-r–rw- 1 root root 0 Aug 9 14:50 temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: See output above. Execute permission is also given to the other user.
  prefs: []
  type: TYPE_NORMAL
- en: Now run command to take away write permission to the other user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: chmod o-w temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: ls -all | grep temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: -rw-r–r– 1 root root 0 Aug 9 14:50 temp.txt
  prefs: []
  type: TYPE_NORMAL
- en: Notice how write permission is taken away from the other user
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** Check out our system design tutorial series [System Design Questions](https://techbyexample.com/system-design-questions/)**'
  prefs: []
  type: TYPE_NORMAL
