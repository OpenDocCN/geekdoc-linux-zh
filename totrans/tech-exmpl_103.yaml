- en: Maximum continuous subarray sum program
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/maximum-continuous-subarray-sum-program/](https://techbyexample.com/maximum-continuous-subarray-sum-program/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The objective is to find the maximum subarray in a given input array. The subarray
    should be contiguous and should contain at least one element
  prefs: []
  type: TYPE_NORMAL
- en: For example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Another example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: We use the Kadane algorithm here. In the Kadane algorithm, we keep two variables
    **max** and **currentMax**
  prefs: []
  type: TYPE_NORMAL
- en: '**max** is initialized to IntMin and **currentMax** is initialized to zero'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Then we Loop for each element in the array
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Set **currentMax** = **currentMax** + a[i]
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If **currentMax** > **max** then **max** is set to **currentMax**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: if **currentMax** is less than zero then **currentMax** is reset to zero
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
