- en: Program to find if a given substring exists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 程序用于查找给定子字符串是否存在
- en: 原文：[https://techbyexample.com/program-substring-exists/](https://techbyexample.com/program-substring-exists/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/program-substring-exists/](https://techbyexample.com/program-substring-exists/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**概述**'
- en: In this tutorial, we will see the most simple way to find a substring in a given
    string. Note that it may not be the most efficient strategy.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将看到一种最简单的方法来查找给定字符串中的子字符串。请注意，这可能不是最有效的策略。
- en: The strategy will be
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 策略将是
- en: Match the substring starting with every index in the given string
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 匹配给定字符串中从每个索引开始的子字符串
- en: Overall Time Complexity of this approach will be **O(mn)** where mis the length
    of the substring and **n** is the size of the input string
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的整体时间复杂度将是 **O(mn)**，其中m是子字符串的长度，**n**是输入字符串的大小
- en: Our program will return the index in the original string where the given substring
    starts. If the substring did not exist in the given string it will return -1
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的程序将返回给定子字符串在原始字符串中开始的索引。如果子字符串不存在于给定字符串中，程序将返回-1。
- en: Example
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '[PRE0]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**“io”** exists in **“lion”** at position 1'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**“io”** 在 **“lion”** 中的位置为1'
- en: Another example
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子
- en: '**“tus”** doesn’t exist in **“tub”**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**“tus”** 在 **“tub”** 中不存在'
- en: '**Program**'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**程序**'
- en: Here is the program for the same.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是相应的程序。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Note:** Check out our Golang Advanced Tutorial. The tutorials in this series
    are elaborative and we have tried to cover all concepts with examples. This tutorial
    is for those who are looking to gain expertise and a solid understanding of golang
    – [Golang Advance Tutorial](https://golangbyexample.com/golang-comprehensive-tutorial/)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 查看我们的Golang进阶教程。该系列教程内容详尽，我们尽力通过示例覆盖所有概念。本教程适合那些希望获得Golang专业知识并深入理解的人——[Golang进阶教程](https://golangbyexample.com/golang-comprehensive-tutorial/)'
- en: Also if you are interested in understanding how all design patterns can be implemented
    in Golang. If yes, then this post is for you –[All Design Patterns Golang](https://golangbyexample.com/all-design-patterns-golang/)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解如何在Golang中实现所有设计模式。如果是的话，那么这篇文章适合你——[所有设计模式 Golang](https://golangbyexample.com/all-design-patterns-golang/)
