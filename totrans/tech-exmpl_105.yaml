- en: Preorder traversal of a Binary Tree
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/preorder-traversal-of-a-binary-tree/](https://techbyexample.com/preorder-traversal-of-a-binary-tree/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the preorder traversal of a binary tree, we follow the below order
  prefs: []
  type: TYPE_NORMAL
- en: Visit Root
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vist Left Subtree
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visit Right Subtree
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For example, let’s say we have below binary tree
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a326e4e3810e8771142ce8b6cef7429.png)'
  prefs: []
  type: TYPE_IMG
- en: Then preorder traversal would be
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
