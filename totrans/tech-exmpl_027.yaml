- en: Traverse three arrays together in Ruby Language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/traverse-three-arrays-ruby/](https://techbyexample.com/traverse-three-arrays-ruby/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is possible to traverse three arrays at once in Ruby. It can be done using
    the .zip function.  Here is the doc link for the zip function
  prefs: []
  type: TYPE_NORMAL
- en: '[https://ruby-doc.org/core-2.0.0/Array.html#method-i-zip](https://ruby-doc.org/core-2.0.0/Array.html#method-i-zip)'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s see the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here is the code to traverse three arrays together when the size of all the
    three arrays  is the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If the size of the arrays is not  the same then it will print empty space for
    elements in arrays of lesser size
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Note:** Check out our system design tutorial series [System Design Questions](https://techbyexample.com/system-design-questions/)'
  prefs: []
  type: TYPE_NORMAL
