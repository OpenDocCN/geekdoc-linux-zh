["```go\nInput: [1, 2]\nOutput: [[],[1],[2],[1,2]]\n\nInput: [1, 2, 3]\nOutput: [[] [1] [2] [1 2] [3] [1 3] [2 3] [1 2 3]]\n```", "```go\n000\n001\n010\n011\n100\n101\n110\n111\n```", "```go\n000 - []\n001 - [1]\n010 - [2]\n011 - [1, 2]\n100 - [3]\n101 - [1, 3]\n110 - [2, 3]\n111 - [1, 2, 3]\n```", "```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc subsets(nums []int) [][]int {\n\n\tlengthNums := len(nums)\n\tpowerSetLength := int(math.Pow(2, float64(lengthNums)))\n\toutput := make([][]int, 0)\n\n\tfor i := 0; i < powerSetLength; i++ {\n\n\t\tresult := make([]int, 0)\n\t\tfor j := 0; j < lengthNums; j++ {\n\t\t\tval := int(i) & int(1<<j)\n\t\t\tif val != 0 {\n\t\t\t\tresult = append(result, nums[j])\n\t\t\t}\n\t\t}\n\n\t\toutput = append(output, result)\n\t}\n\n\treturn output\n}\n\nfunc main() {\n\toutput := subsets([]int{1, 2})\n\tfmt.Println(output)\n\n\toutput = subsets([]int{1, 2, 3})\n\tfmt.Println(output)\n}\n```", "```go\n[[] [1] [2] [1 2]]\n[[] [1] [2] [1 2] [3] [1 3] [2 3] [1 2 3]]\n```"]