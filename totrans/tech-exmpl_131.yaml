- en: What does chmod o+w command mean in bash or terminal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/ow-chmod-permission-linux/](https://techbyexample.com/ow-chmod-permission-linux/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are three components that are in the picture when it comes to managing
    the permissions of a file.
  prefs: []
  type: TYPE_NORMAL
- en: '**User** – Abbreviated by **‘u’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Group** – Abbreviated by **‘g’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Other**– Abbreviated by **‘o’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Permissions** (Read/Write/Execute) where read, write, execute is abbreviated
    by **‘r’,’w’** and **‘x’**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So **o+w** means giving **write** permission to the **other** user
  prefs: []
  type: TYPE_NORMAL
- en: '**Example**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Create a file **temp.txt**. Check its permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Notice that the **other** user only has permission toonly **read**
  prefs: []
  type: TYPE_NORMAL
- en: Now run command
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: See output above. Execute permission is also given to the other user.
  prefs: []
  type: TYPE_NORMAL
