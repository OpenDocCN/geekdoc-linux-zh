["```go\nexport P4USER=myuser\nexport P4PORT=ssl:my.server.perforce.com:31211\n```", "```go\nimport os\nimport sys\nimport subprocess\n\n#Utility function to run the OS commands\ndef execute_shell_command(commands, raise_if_error=True, capture_output=True):\n    print('Running Command: %s' % ' '.join(commands))\n\n    if capture_output:\n        p = subprocess.Popen(commands, cwd=None, stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE)\n        out = p.stdout.read().strip().decode('utf-8')\n        err = p.stderr.read().strip().decode('utf-8')\n    else:\n        p = subprocess.Popen(commands)\n\n    p.communicate()\n    exit_status = p.returncode\n\n    print('Output: Exit Status  : %s' % exit_status)\n\n    if exit_status != 0 and raise_if_error:\n        if capture_output:\n            raise Exception('Error in running os command: %s. Exit Code: %d, Stdout: `%s`, Stderr: `%s`' % (' '.join(commands), exit_status, out, err))\n        else:\n            raise Exception('Error in running os command: %s. Exit Code: %d' % (' '.join(commands), exit_status))\n\n    return exit_status\n\n#Function to perform perforce login \ndef p4_login(ticket, attempt_login=True):\n    #First check trust is established between P4 server and the machine.\n    if ticket is not None:\n        exitStatus = execute_shell_command(['p4', 'trust', '-y', '-f'], raise_if_error=False)\n        if exitStatus != 0:\n            sys.exit('Error: p4 trust has been failed. Please check perforce documentation')\n\n        exitStatus = execute_shell_command(['p4', '-P', ticket, 'monitor', 'show'], raise_if_error=False)\n        if exitStatus != 0:\n            sys.exit('Error: Ticket may be expired. please check.')\n    else:\n        exitStatus = execute_shell_command(['p4', 'login', '-s'], raise_if_error=False)\n        if exitStatus != 0:\n            if attempt_login:\n                print('Please enter your Password:')\n                execute_shell_command(['p4', 'login'], capture_output=False)\n                p4_login(ticket, attempt_login=False)\n            else:\n                sys.exit('Error: You have not logged into Perforce successfully. Please check perforce documentation')\n\n#Now use it something like this\np4_ticket = os.environ.get('P4_TICKET')\np4_login(p4_ticket)\n```", "```go\nsource ~/.bashrc or ~/.zshrc \npython3 p4_login.py\n```"]