- en: Check if a given tree is a Binary Search Tree
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/tree-is-bst/](https://techbyexample.com/tree-is-bst/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We can use the below strategy to know if a given tree is a BST.
  prefs: []
  type: TYPE_NORMAL
- en: For a given current node, if the left and right subtree are BST
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The maximum value in the left subtree is less than the current node value
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The minimum value in the right subtree is greater than the current node value
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Here is the program for the same.
  prefs: []
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '[bst](https://techbyexample.com/tag/bst/)*   [tree](https://techbyexample.com/tag/tree/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
