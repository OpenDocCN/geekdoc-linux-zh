- en: Jump Game Program
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/jump-game-program/](https://techbyexample.com/jump-game-program/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is an input array provided. Each entry in the array represents the maximum
    jump length from that position. One is supposed to start from the first index
    and return true if the last index can be reached and return false if the last
    index cannot be reached
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: In the first example, there are different ways to reach the last index.
  prefs: []
  type: TYPE_NORMAL
- en: 0-1-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 0-2-3-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the second example, there is no way to reach the last index. The best you
    can reach is the second last index. Since the value at the second last index is
    zero, therefore it is not possible to reach the last index.
  prefs: []
  type: TYPE_NORMAL
- en: There is another variation where you have to return the minimum number of jumps.
    We will look at the program later
  prefs: []
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: There is another variation where you have to return the minimum number of jumps.
    Here is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '[game](https://techbyexample.com/tag/game/)*   [jump](https://techbyexample.com/tag/jump/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
