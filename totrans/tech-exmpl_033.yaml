- en: Program for an ugly number
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://techbyexample.com/program-ugly-number/](https://techbyexample.com/program-ugly-number/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Overview**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An ugly number is a number whose prime factors are limited to 2,3 and 5.
  prefs: []
  type: TYPE_NORMAL
- en: Given a number, n return true if it is an ugly number otherwise return false.
  prefs: []
  type: TYPE_NORMAL
- en: '**Example 1**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**Example 2**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Idea is to
  prefs: []
  type: TYPE_NORMAL
- en: While the number is a factor of two keep dividing the number by 2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While the number is a factor of three keep dividing the number by 3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While the number is a factory of five keep dividing the number by 5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In the end, if the number is equal to 1 then return true otherwise return false
  prefs: []
  type: TYPE_NORMAL
- en: '**Program**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Below is the program for the same
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Output**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Also, check out our system design tutorial series here – [System Design Tutorial
    Series](https://techbyexample.com/system-design-questions/)
  prefs: []
  type: TYPE_NORMAL
