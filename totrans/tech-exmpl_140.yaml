- en: Parse a URL and extract all the parts in Ruby Language
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Ruby语言中解析URL并提取所有部分
- en: 原文：[https://techbyexample.com/parse-url-ruby/](https://techbyexample.com/parse-url-ruby/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://techbyexample.com/parse-url-ruby/](https://techbyexample.com/parse-url-ruby/)
- en: '**Overview**'
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**概述**'
- en: '**URI** module can be used to parse a URL and extract all parts [https://ruby-doc.org/stdlib-2.5.1/libdoc/uri/rdoc/URI.html](https://ruby-doc.org/stdlib-2.5.1/libdoc/uri/rdoc/URI.html)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**URI**模块可以用来解析URL并提取所有部分 [https://ruby-doc.org/stdlib-2.5.1/libdoc/uri/rdoc/URI.html](https://ruby-doc.org/stdlib-2.5.1/libdoc/uri/rdoc/URI.html)'
- en: Once the given URL is parsed correctly, then it will return the URI object.
    We can then access the below information from the URI
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦给定的URL正确解析，它将返回URI对象。然后我们可以从URI中访问以下信息
- en: Scheme
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议
- en: User Info
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户信息
- en: Hostname
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机名
- en: Port
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口
- en: Pathname
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径名
- en: Query Params
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询参数
- en: Fragment
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 片段
- en: 'Let’s see a working program for the same:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看一个相同功能的程序：
- en: We will parse the below URL
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将解析以下URL
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Then
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然后
- en: Scheme is HTTPS
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议是HTTPS
- en: 'User Info – username is test and password is abcd123\. Username and password
    are separated by a colon :'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户信息 – 用户名是test，密码是abcd123\。用户名和密码由冒号:分隔
- en: Hostname is [www.techbyexample.com](http://www.golangbyexample.com/)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机名是 [www.techbyexample.com](http://www.golangbyexample.com/)
- en: Port is 8000
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口是8000
- en: The path is tutorials/intro
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路径是tutorials/intro
- en: Query Params is **type=advance** and **compact=false**. They are separated by
    ampersand
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查询参数是**type=advance**和**compact=false**。它们由&符号分隔
- en: fragment is **history**. It will directly take to the history section within
    that page. **history** is an identifier that refers to that section within that
    page
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 片段是**history**。它会直接跳转到页面中的历史部分。**history**是指向该页面内特定部分的标识符
- en: '**Program**'
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**程序**'
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Output**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**输出**'
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: It correctly dumps all the information as seen from the output
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 它正确地输出了所有信息，正如从输出中看到的那样
- en: '[ruby](https://techbyexample.com/tag/ruby/)*   [url](https://techbyexample.com/tag/url/)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[ruby](https://techbyexample.com/tag/ruby/)*   [url](https://techbyexample.com/tag/url/)'
